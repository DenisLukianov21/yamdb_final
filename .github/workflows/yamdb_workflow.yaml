name: Django-app-workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        cd api_yamdb/
        pip install -r requirements.txt
        cd ..

    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
        pytest

  push:
    runs-on: ubuntu-latest
    needs: tests 
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Check
      uses: actions/checkout@v3

    - name: Set up
      uses: docker/setup-buildx-action@v1 

    - name: Login
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_LOGIN }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: denislukianov2001/infra-web:latest 

  deploy:
      runs-on: ubuntu-latest
      needs: push
      steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            script: |
              sudo docker-compose stop
              sudo docker-compose rm web
              touch .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              sudo docker-compose up -d


  telegram:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send_message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TO }}
        token: ${{ secrets.TOKEN }}
        message: ${{ github.workflow }} успешно выполнен! 
